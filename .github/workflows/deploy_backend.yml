# .github/workflows/deploy_backend.yml
name: Deploy Backend to AWS Elastic beanstalk

on:
  push:
    branches:
      - main
    paths:
      - 'devdash/backend/**'
      - '.github/workflows/deploy_backend.yml'
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Generate deployment package
        run: |
          mkdir -p deploy/
          
          # Copy application files
          cp -r devdash/backend/* deploy/
          
          # Create necessary directories
          mkdir -p deploy/.ebextensions
          mkdir -p deploy/.platform/hooks/prebuild
          
          # Create simplified configuration
          cat > deploy/.ebextensions/01_setup.config << 'EOF'
          # Configuration content from above
          EOF
          
          # Create secrets script
          cat > deploy/.platform/hooks/prebuild/01_get_secrets.sh << 'EOF'
          # Script content from above
          EOF
          
          chmod +x deploy/.platform/hooks/prebuild/01_get_secrets.sh
          
          # Update requirements.txt if needed
          if [ -f "deploy/requirements.txt" ]; then
            # Make sure we're using a specific version of psycopg2
            if ! grep -q "psycopg2-binary" deploy/requirements.txt; then
              echo "psycopg2-binary==2.9.5" >> deploy/requirements.txt
            fi
          fi
          
          # Create zip package
          cd deploy
          zip -r ../deploy.zip .
          cd ..
        
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: DevDashBackend
          environment_name: DevDashBackend-env
          version_label: backend-${{ github.sha }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deploy.zip
          wait_for_deployment: true